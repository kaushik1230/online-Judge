{"version":3,"file":"static/js/739.7e0d6bdf.chunk.js","mappings":"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","sources":["webpack://oj-client/./src/pages/Notes/Note/Note.module.css?db37","pages/Notes/Note/Note.js","pages/Notes/AddNote/AddNote.js","webpack://oj-client/./src/pages/Notes/ViewNote/ViewNote.module.css?e4d4","pages/Notes/ViewNote/ViewNote.js","pages/Notes/EditNote/EditNote.js","webpack://oj-client/./src/pages/Notes/Notes.module.css?991b","pages/Notes/Notes.js","pages/Question/Editor/CodeEditorv3.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"note\":\"Note_note__A+Qow\",\"title\":\"Note_title__eJQeB\",\"desc\":\"Note_desc__h-ZzL\",\"ftr\":\"Note_ftr__VxJ7a\"};","import React, { Fragment } from 'react';\nimport classes from './Note.module.css';\n\nconst Note = ({ note, setOpenViewModal, setViewNote, refreshNotesList }) => {\n\n    let { title, codeid, desc, username, access, editable, edited, deleted } = note;\n    title = title || \"Title\";\n    codeid = codeid || null;\n    desc = desc || \"Description\";\n    editable = editable || false;\n    username = username || \"guest\";\n\n    const noteClickHandler = () => {\n        if ((!codeid || edited || deleted)) return;\n        setViewNote(note);\n        setOpenViewModal(true);\n    }\n\n    return (\n        <div className={classes.note} style={(edited || deleted) && { cursor: 'default' }} onClick={noteClickHandler}>\n            {(edited || deleted) ?\n                <Fragment>\n                    <div style={{ fontSize: '2.4rem', fontWeight: 700, color: 'hsl(0, 60%, 50%)' }}>{deleted ? \"Deleted\" : \"Edited\"}</div>\n                    <div style={{ fontSize: '0.8rem', color: 'hsla(0, 40%, 50%,0.8)', margin: 'unset', lineHeight: '0.9rem' }}>{deleted ? \"This note has been Removed !\" : \"An Edit has been made to this note\"}</div>\n                    <div style={{ fontSize: '0.8rem', color: 'hsla(0, 40%, 50%,0.8)', margin: 'unset', lineHeight: '0.9rem' }}>\n                        <span style={{\n                            zIndex: 100, position: 'relative',\n                            color: 'blue', textDecoration: 'underline',\n                            fontWeight: 500, cursor: 'pointer', marginRight: '3px'\n                        }}\n                            onClick={refreshNotesList} >\n                            Refresh\n                        </span>\n                        this page to see changes !\n                    </div>\n                </Fragment>\n                :\n                < Fragment >\n                    <h4 className={classes.title}>{title}</h4>\n                    <p className={classes.desc}>{desc}</p>\n                </Fragment>\n            }\n            <div className={classes.ftr}>\n                <span>{username}</span>\n                <span>{access} / {editable ? \"editable\" : \"read-only\"}</span>\n            </div>\n        </div >\n    )\n}\n\nexport default Note;","import React, { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n    FormControl, FormControlLabel,\n    DialogContent, DialogTitle,\n    Button, styled, TextField,\n    Dialog, DialogActions,\n    InputLabel, MenuItem,\n    Select, Switch\n} from '@mui/material';\nimport { Box } from '@mui/system';\n\nimport CodeEditorv3 from '../../Question/Editor/CodeEditorv3';\nimport Note from '../Note/Note';\nimport { SERVER_LINK } from '../../../dev-server-link';\nimport { messageActions } from '../../../store/Message/message-slice';\n\nconst AddNote = ({ openModal, setOpenModal, isMobile, setReloadNeeded, SlideTransition }) => {\n\n    const { username, isAdmin, isGuest } = useSelector(state => state.auth);\n\n    const [title, setTitle] = useState('');\n    const [desc, setDesc] = useState('');\n    const [access, setAccess] = useState('public');\n    const [editable, setEditable] = useState(false);\n    const [code, setCode] = useState('');\n    const [language, setLanguage] = useState('c');\n\n    const dispatch = useDispatch();\n\n    const resetStates = () => {\n        setTitle('');\n        setDesc('');\n        setAccess('public');\n        setEditable(false);\n        setCode('');\n    }\n\n    const handleClose = () => {\n        resetStates();\n        setOpenModal(false);\n    };\n\n    const handleAdd = () => {\n        if (!title || !desc) {\n            dispatch(messageActions.set({ type: 'error', message: \"title and description can't be empty\", description: 'title and description are required so please fill both !!!' }));\n            return;\n        }\n\n        handleClose();\n        dispatch(messageActions.set({ type: 'info', message: 'Adding New Note...' }));\n        // send request to server to add note with given info and credentials\n        fetch(\n            `${SERVER_LINK}/api/notes`,\n            {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                body: JSON.stringify({ title, desc, code, language, access, editable }),\n                credentials: 'include'\n            }\n        )\n            .then(async response => {\n                const res = await response.json();\n                if (response.ok) return res\n                return Promise.reject(res);\n            })\n            .then(response => {\n                dispatch(messageActions.set({ type: 'success', message: 'Added Note Successfully !', description: JSON.stringify(response) }));\n                setReloadNeeded(true);\n            })\n            .catch(err => {\n                console.error(err);\n                dispatch(messageActions.set({ type: 'error', message: 'Adding Note Unsuccessful!', description: JSON.stringify(err) }));\n            })\n    }\n\n    const descriptionElementRef = useRef(null);\n    useEffect(() => {\n        if (openModal) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [openModal]);\n\n    useEffect(() => {\n        if (access === 'private') setEditable(false);\n    }, [access]);\n\n    return (\n        <Dialog\n            open={openModal}\n            onClose={() => setOpenModal(false)}\n            scroll='paper'\n            aria-labelledby=\"Add-Note\"\n            fullWidth\n            maxWidth={!isMobile && 'sm'}\n            fullScreen={isMobile}\n            TransitionComponent={SlideTransition}\n        >\n            <DialogTitle style={{ textTransform: 'capitalize' }}>Add Note</DialogTitle>\n            <DialogContent dividers ref={descriptionElementRef}>\n                <div style={{ display: 'flex', justifyContent: 'center', position: 'relative' }}>\n                    <span style={{ position: 'absolute', top: '-0.8rem', left: '0', fontWeight: 600, opacity: 0.6 }}>Preview :</span>\n                    <Note note={{ title, desc, access, editable, username }} />\n                </div>\n                <Box\n                    component=\"form\"\n                    sx={{\n                        '& .MuiTextField-root': { mb: 1.3, width: '85%' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField\n                        required\n                        id=\"title-textarea\"\n                        label=\"Title\"\n                        placeholder=\"Write max 20 characters\"\n                        value={title}\n                        onChange={event => setTitle(event.target.value)}\n                    />\n                    <TextField\n                        id=\"desc-textarea\"\n                        label=\"Description\"\n                        placeholder=\"Write max 200 characters\"\n                        multiline\n                        value={desc}\n                        onChange={event => setDesc(event.target.value)}\n                    />\n                    <FormControl sx={{ width: '85%' }}>\n                        <InputLabel id=\"access-input-label\">Access</InputLabel>\n                        <Select\n                            labelId=\"access-input-label\"\n                            id=\"access-input\"\n                            label=\"Access\"\n                            value={access}\n                            onChange={event => setAccess(event.target.value)}\n                        >\n                            {isAdmin && <MenuItem value='global'>Global</MenuItem>}\n                            <MenuItem value='public'>Public</MenuItem>\n                            {!isGuest && <MenuItem value='private'>Private</MenuItem>}\n                        </Select>\n                    </FormControl>\n\n                    {(access !== 'private') ?\n                        <div>\n                            <FormControlLabel\n                                label=\"Editable (By Anyone)\"\n                                control={<CustomSwitch checked={editable} onChange={event => setEditable(event.target.checked)} />}\n                                labelPlacement='start'\n                            />\n                            <span style={{ marginLeft: '0.9rem', fontWeight: 600, opacity: 0.6 }}>{editable ? \"Yes\" : \"No\"} </span>\n                        </div>\n                        :\n                        <div style={{ fontSize: '0.85rem', fontWeight: 600, opacity: 0.6, margin: '0.6rem 0 0.6rem 0' }}>\n                            Private Note can't be made Editable by everyone (as only you can view/edit)\n                        </div>\n                    }\n\n                    <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between' }}>\n                        <div style={{ fontWeight: 600, fontSize: '1.1rem', opacity: 0.7 }}>Enter Code : </div>\n                        <FormControl>\n                            <InputLabel id=\"changeLang-select-label\">Language</InputLabel>\n                            <Select\n                                labelId=\"changeLang-select-label\"\n                                id=\"changeLang-select\"\n                                value={language}\n                                label=\"Language\"\n                                style={{ width: '8em', height: '2.5em' }}\n                                onChange={e => setLanguage(e.target.value)}\n                            >\n                                <MenuItem value={'c'}>C</MenuItem>\n                                <MenuItem value={'cpp'}>Cpp</MenuItem>\n                                <MenuItem value={'py'}>Python</MenuItem>\n                                <MenuItem value={'java'}>JAVA</MenuItem>\n                                <MenuItem value={'js'}>JS</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <CodeEditorv3\n                        code={code}\n                        setCode={setCode}\n                        language={language}\n                        fontSize={13}\n                    />\n                </Box>\n\n            </DialogContent>\n            <DialogActions>\n                <Button style={{ textTransform: 'capitalize' }} variant='outlined' color='secondary' onClick={handleAdd}>Add</Button>\n                <Button style={{ textTransform: 'capitalize' }} variant='outlined' onClick={handleClose}>Cancel</Button>\n            </DialogActions>\n        </Dialog >\n    );\n}\n\nconst CustomSwitch = styled(Switch)(({ theme }) => ({\n    padding: 8,\n    '& .MuiSwitch-track': {\n        borderRadius: 22 / 2,\n        '&:before, &:after': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            width: 16,\n            height: 16,\n        },\n        '&:before': {\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n                theme.palette.getContrastText(theme.palette.primary.main),\n            )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\n            left: 12,\n        },\n        '&:after': {\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n                theme.palette.getContrastText(theme.palette.primary.main),\n            )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\n            right: 12,\n        },\n    },\n    '& .MuiSwitch-thumb': {\n        boxShadow: 'none',\n        width: 16,\n        height: 16,\n        margin: 2,\n    },\n}));\n\nexport default AddNote;\n","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"ViewNote_body__gty1n\",\"response\":\"ViewNote_response__hMYfE\",\"resHead\":\"ViewNote_resHead__UrDgR\",\"resTextHead\":\"ViewNote_resTextHead__4Jwdf\"};","import React, { Fragment, useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button, DialogContentText,\n    Fab, Fade, IconButton, Tooltip,\n    Zoom, Dialog, DialogActions,\n    DialogContent, DialogTitle, TextField\n} from '@mui/material';\nimport {\n    Check, ContentCopy,\n    Delete, Edit, Share\n} from '@mui/icons-material';\nimport { Box } from '@mui/system';\nimport moment from 'moment';\nimport copy from 'copy-to-clipboard';\nimport Note from '../Note/Note';\nimport classes from './ViewNote.module.css';\nimport { SERVER_LINK } from '../../../dev-server-link';\nimport CodeEditorv3 from '../../Question/Editor/CodeEditorv3';\nimport { messageActions } from '../../../store/Message/message-slice';\nimport LoadingSpinner from './../../../compenents/LoadingSpinner/LoadingSpinner';\n\nconst ViewNote = ({ openModal, setOpenModal, viewNote, setEditNote, setOpenEditModal, isMobile, markEditOrDelete, setReloadNeeded, SlideTransition }) => {\n\n    const { username, title, desc, access, editable, codeid, _id: noteid, lastModifiedAt } = viewNote;\n\n    const dispatch = useDispatch();\n    const { username: auth_username, isAdmin, isGuest } = useSelector(state => state.auth);\n\n    const [code, setCode] = useState('');\n    const [language, setLanguage] = useState('c');\n    const [openDeleteModal, setOpenDeleteModal] = useState(false);\n    const [copied, setCopied] = useState(false);\n    if (copied === true) setTimeout(() => setCopied(false), 2500);\n    const [loading, setLoading] = useState(true);\n\n    const handleClose = () => {\n        setOpenModal(false);\n    };\n\n    const descriptionElementRef = useRef(null);\n    useEffect(() => {\n        if (openModal) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [openModal]);\n\n    useFetchCodeForNote(codeid, noteid, setCode, setLanguage, setLoading);\n\n    const copyHandler = () => {\n        const result = copy(code);\n        const type = result ? 'success' : 'error';\n        const message = result ? 'Code copied successfully !' : 'There are some errors copying the code !';\n\n        dispatch(messageActions.set({ type, message }));\n        setCopied(true);\n    }\n\n    const handleEdit = () => {\n        setEditNote({ ...viewNote, code, language });\n        setOpenEditModal(true);\n        setOpenModal(false);\n    }\n\n    const handleDelete = () => {\n        setOpenDeleteModal(false);\n        setOpenModal(false);\n\n        // Make a request to server with credentials to delete perticular note\n        fetch(\n            `${SERVER_LINK}/api/notes/${noteid}`,\n            {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'DELETE',\n                credentials: 'include'\n            }\n        )\n            .then(async response => {\n                const res = await response.json();\n                if (response.ok) return res\n                return Promise.reject(res);\n            })\n            .then(response => {\n                dispatch(messageActions.set({ type: 'success', message: 'Deleted Note Successfully !', description: JSON.stringify(response) }));\n                markEditOrDelete(noteid, 'deleted');\n                setReloadNeeded(true);\n            })\n            .catch(err => {\n                console.error(err);\n                dispatch(messageActions.set({ type: 'error', message: 'Deleting Note Unsuccessful!', description: JSON.stringify(err) }));\n            })\n    }\n\n    const handleShare = () => {\n        const link = window.location.href;\n        const result = copy(link);\n        let type = '';\n        let message = '';\n        let description = '';\n\n        if (!result) {\n            type = 'error'; message = \"There are some errors copying the Note's Link !\";\n            description = 'Try using another browser !';\n        } else if (access === 'private') {\n            type = 'warning'; message = \"Link copied but someone else can't open it as its a Private Note\";\n            description = 'Make this Note public to make it share-able !';\n        } else {\n            type = 'success'; message = 'Link to the Note copied successfully !';\n            description = `Link to Note : ${link}`;\n        }\n\n        dispatch(messageActions.set({ type, message, description }));\n    }\n\n    const [codeSubmittingState, setCodeSubmittingState] = useState('not-initialized');\n    const [response, setResponse] = useState({ status: 'pending' });\n    const [input, setInput] = useState('');\n    const endRef = useRef(null);\n\n    useEffect(() => {\n        setCode('');\n        setInput('');\n        setLoading(true);\n        setCodeSubmittingState('not-initialized');\n        setResponse({ status: 'pending' });\n    }, [noteid]);\n\n    const intervalID = useRef(null);\n    const stopInterval = useCallback(() => {\n        if (intervalID.current) {\n            clearInterval(intervalID.current);\n            intervalID.current = null;\n        }\n    }, []);\n\n    useEffect(() => {\n        if (intervalID.current)\n            setCodeSubmittingState('not-initialized');\n        stopInterval();\n    }, [openModal, stopInterval]);\n\n    const handleCompile = async event => {\n\n        event.preventDefault();\n\n        if (codeSubmittingState === 'submitting') return;\n\n        setCodeSubmittingState('submitting');\n        setResponse({ msg: 'Queueing...', status: 'pending' });\n\n        if (endRef.current)\n            endRef.current.scrollIntoView({ behavior: 'smooth' });\n\n        try {\n            const query = await fetch(\n                `${SERVER_LINK}/api/explore/codeExecutor`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    method: 'POST',\n                    credentials: 'include',\n                    body: JSON.stringify({ code, language, input })\n                }\n            );\n            const queryData = await query.json();\n            setResponse(queryData);\n\n            if (query.ok) {\n                intervalID.current = setInterval(async () => {\n                    const response = await fetch(\n                        `${SERVER_LINK}/api/explore/status/${queryData.queryId}`,\n                        {\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            method: 'GET'\n                        }\n                    );\n                    const data = await response.json();\n                    if (intervalID.current && !response.ok) {\n                        stopInterval();\n                        setCodeSubmittingState('submitted');\n                        setResponse(data);\n                    }\n                    else if (intervalID.current && data.status !== 'pending') {\n                        stopInterval();\n                        setCodeSubmittingState('submitted');\n                        setResponse({ ...data.output, status: data.status });\n                    }\n                    // else console.log('status -> pending');\n                }, 1000);\n            }\n            else {\n                setCodeSubmittingState('submitted');\n            }\n        } catch (error) {\n            setResponse({ msg: 'caught errors while sending code to server for getting verdict', serverError: JSON.stringify(error) });\n            setCodeSubmittingState('submitted');\n        }\n    }\n\n    const isEditable = (isAdmin || (access !== 'private' && editable) || (!isGuest && (auth_username === username)));\n    const isDeleteable = (isAdmin || (!isGuest && (auth_username === username)));\n\n    return (\n        <Fragment>\n            <ConfirmationDialog open={openDeleteModal} setOpen={setOpenDeleteModal} handleDeleteOperation={handleDelete} />\n            <Dialog\n                open={openModal}\n                onClose={() => setOpenModal(false)}\n                scroll='paper'\n                aria-labelledby=\"View-Note\"\n                fullWidth\n                maxWidth={!isMobile && 'md'}\n                fullScreen={isMobile}\n                TransitionComponent={SlideTransition}\n            >\n                <DialogTitle style={{ textTransform: 'capitalize' }}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span>View Note</span>\n                        <div style={{ display: 'flex' }}>\n                            <Tooltip TransitionComponent={Zoom} title='Share' placement='bottom'>\n                                <Box>\n                                    <Fab onClick={handleShare} size=\"small\" color=\"success\" aria-label=\"share\">\n                                        <Share />\n                                    </Fab>\n                                </Box>\n                            </Tooltip>\n                            <Tooltip TransitionComponent={Zoom} title={(!isEditable) ? \"Can't edit this note\" : 'Edit'} placement='bottom'>\n                                <Box>\n                                    <Fab onClick={handleEdit} size=\"small\" color=\"info\" aria-label=\"edit\" sx={{ ml: 1 }} disabled={(!isEditable)}>\n                                        <Edit />\n                                    </Fab>\n                                </Box>\n                            </Tooltip>\n                            <Tooltip TransitionComponent={Zoom} title={(!isDeleteable) ? \"Can't delete this note\" : 'Delete'} placement='bottom'>\n                                <Box>\n                                    <Fab onClick={() => setOpenDeleteModal(true)} size=\"small\" color=\"warning\" aria-label=\"delete\" sx={{ ml: 1 }} disabled={(!isDeleteable)}>\n                                        <Delete />\n                                    </Fab>\n                                </Box>\n                            </Tooltip>\n                        </div>\n                    </div>\n                </DialogTitle>\n                <DialogContent dividers ref={descriptionElementRef}>\n                    <div style={{ display: 'flex', justifyContent: 'center', position: 'relative' }}>\n                        <span style={{ position: 'absolute', top: '-0.8rem', left: '0', fontWeight: 600, opacity: 0.6 }}>Preview :</span>\n                        <Note note={{ title, desc, access, editable, username }} />\n                    </div>\n                    <Box\n                        component=\"form\"\n                        sx={{\n                            '& .MuiTextField-root': { mb: 1.3, width: '85%' },\n                        }}\n                        noValidate\n                        autoComplete=\"off\"\n                    >\n                        <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between' }}>\n                            <div>\n                                <Tooltip TransitionComponent={Zoom} title={copied ? 'Code Copied' : 'Copy Code'} placement='right'>\n                                    <IconButton\n                                        onClick={copyHandler}\n                                        aria-label={copied ? 'Code Copied' : 'Copy Code'}\n                                    >\n                                        {copied ? <Check /> : <ContentCopy />}\n                                    </IconButton>\n                                </Tooltip>\n                            </div>\n                            <div style={{ fontWeight: 600, fontSize: '1.1rem', opacity: 0.7 }}>Language : {loading ? '...' : language}</div>\n                        </div>\n                        <CodeEditorv3\n                            code={code}\n                            setCode={setCode}\n                            language={language}\n                            fontSize={15}\n                            isReadOnly\n                            isLoading={loading}\n                        />\n                    </Box>\n\n                    <TextField\n                        id=\"input-textarea\"\n                        placeholder=\"Put Multiline Input here\"\n                        label='Any Input ?'\n                        color='secondary'\n                        fullWidth\n                        multiline\n                        maxRows='3'\n                        variant='outlined'\n                        sx={{ marginTop: '2rem' }}\n                        value={input}\n                        onChange={event => setInput(event.target.value)}\n                    />\n                    {codeSubmittingState !== 'not-initialized' && (\n                        <Box className={classes.body}>\n                            <div style={{ \"--col\": (response.status === 'success' ? 127 : 0) }} className={classes.response}>\n                                {response.msg &&\n                                    <div className={classes.resTextHead}>\n                                        <div className={classes.resHead}>Msg: </div>\n                                        <div>{response.msg}</div>\n                                    </div>\n                                }\n                                {response.stdout &&\n                                    <div className={classes.resTextHead}>\n                                        <div className={classes.resHead}>STDOUT: </div>\n                                        <div>{response.stdout}</div>\n                                    </div>\n                                }\n                                {response.stderr &&\n                                    <div className={classes.resTextHead}>\n                                        <div className={classes.resHead}>STDERR: </div>\n                                        <div>{response.stderr}</div>\n                                    </div>\n                                }\n                                {response.error &&\n                                    <div className={classes.resTextHead}>\n                                        <div className={classes.resHead}>Error: </div>\n                                        <div>{JSON.stringify(response.error)}</div>\n                                    </div>\n                                }\n                                {response.serverError &&\n                                    <div className={classes.resTextHead}>\n                                        <div className={classes.resHead}>ServerError: </div>\n                                        <div>{response.serverError.toString()}</div>\n                                    </div>\n                                }\n                                {response.status === 'pending' &&\n                                    <div style={{ marginTop: '2rem', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                        <LoadingSpinner />\n                                    </div>\n                                }\n                            </div>\n                        </Box>\n                    )}\n                    <div ref={endRef} style={{ marginTop: '18rem' }} />\n\n                </DialogContent>\n                <DialogActions>\n                    <div style={{ width: '100%', padding: '6px 8px', textTransform: 'capitalize' }}>\n                        <DialogContentText>\n                            Last Modified: {moment(lastModifiedAt).fromNow()}\n                        </DialogContentText>\n                    </div>\n                    <Button style={{ textTransform: 'capitalize' }} variant='outlined' color='secondary' onClick={handleCompile}>Compile</Button>\n                    <Button style={{ textTransform: 'capitalize' }} variant='outlined' onClick={handleClose}>Cancel</Button>\n                </DialogActions>\n            </Dialog >\n        </Fragment>\n    );\n}\n\nconst ConfirmationDialog = ({ open, setOpen, handleDeleteOperation }) => {\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-delete-note\"\n            TransitionComponent={Fade}\n        >\n            <DialogTitle>Delete Note</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Are you sure you want to delete this note ?\n                    <br />\n                    (Once Note is Delete can't be recovered !)\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleDeleteOperation}>Delete</Button>\n                <Button onClick={handleClose} autoFocus>Cancel</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nconst useFetchCodeForNote = (codeid, noteid, setCode, setLanguage, setLoading) => {\n    useEffect(() => {\n        if (!codeid) return;\n\n        // make request to server to fetch code with _id:codeid\n        fetch(\n            `${SERVER_LINK}/api/notes/${codeid}?noteid=${noteid}`,\n            {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'GET',\n                credentials: 'include'\n            }\n        )\n            .then(async response => {\n                const res = await response.json();\n                if (response.ok) return res;\n                return Promise.reject(res);\n            })\n            .then(response => {\n                setCode(response.code);\n                setLanguage(response.language);\n            })\n            .catch(error => { setCode(JSON.stringify(error)) })\n            .finally(() => setLoading(false))\n    }, [codeid, noteid, setCode, setLanguage, setLoading]);\n}\n\n\nexport default ViewNote;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { FormControl, FormControlLabel, InputLabel, MenuItem, Select, Switch, TextField } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { styled } from '@mui/material/styles';\nimport Note from '../Note/Note';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CodeEditorv3 from '../../Question/Editor/CodeEditorv3';\nimport { messageActions } from '../../../store/Message/message-slice';\nimport { SERVER_LINK } from '../../../dev-server-link';\n\n\nconst EditNote = ({ openModal, setOpenModal, editNote, isMobile, markEditOrDelete, setReloadNeeded, SlideTransition }) => {\n\n    const {\n        username, title: title_,\n        desc: desc_, access: access_,\n        editable: editable_, code: code_,\n        language: language_, _id\n    } = editNote;\n\n    const dispatch = useDispatch();\n    const { username: realUsername, isAdmin, isGuest } = useSelector(state => state.auth);\n\n    const [title, setTitle] = useState('');\n    const [desc, setDesc] = useState('');\n    const [access, setAccess] = useState('public');\n    const [editable, setEditable] = useState(false);\n    const [language, setLanguage] = useState('cpp');\n    const [code, setCode] = useState('');\n\n    useEffect(() => {\n        title_ && setTitle(title_);\n        desc_ && setDesc(desc_);\n        access_ && setAccess(access_);\n        editable_ && setEditable(editable_);\n        language_ && setLanguage(language_);\n        code_ && setCode(code_);\n    }, [title_, desc_, access_, editable_, language_, code_, dispatch]);\n\n    const handleClose = () => {\n        setOpenModal(false);\n    }\n\n    const handleSave = () => {\n        if (!title || !desc) {\n            dispatch(messageActions.set({ type: 'error', message: \"title and description can't be empty\", description: 'title and description are required so please fill both !!!' }));\n            return;\n        }\n\n        handleClose();\n        dispatch(messageActions.set({ type: 'info', message: 'Editing the Note...' }));\n\n        // send request to server to edit note with given info and credentials\n        fetch(\n            `${SERVER_LINK}/api/notes/${_id}`,\n            {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'PUT',\n                body: JSON.stringify({ title, desc, code, language, access, editable }),\n                credentials: 'include'\n            }\n        )\n            .then(async response => {\n                const res = await response.json();\n                if (response.ok) return res\n                return Promise.reject(res);\n            })\n            .then(response => {\n                dispatch(messageActions.set({ type: 'success', message: 'Edited Note Successfully !', description: JSON.stringify(response) }));\n                setReloadNeeded(true);\n                markEditOrDelete(_id, 'edited');\n            })\n            .catch(err => {\n                console.error(err);\n                dispatch(messageActions.set({ type: 'error', message: 'Editing Note Unsuccessful!', description: JSON.stringify(err) }));\n            })\n    }\n\n    const descriptionElementRef = useRef(null);\n    useEffect(() => {\n        if (openModal) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [openModal]);\n\n    return (\n        <Dialog\n            open={openModal}\n            onClose={handleClose}\n            scroll='paper'\n            aria-labelledby=\"Edit-Note\"\n            fullWidth\n            maxWidth={!isMobile && 'sm'}\n            fullScreen={isMobile}\n            TransitionComponent={SlideTransition}\n        >\n            <DialogTitle style={{ textTransform: 'capitalize' }}>Edit Note</DialogTitle>\n            <DialogContent dividers ref={descriptionElementRef}>\n                <div style={{ display: 'flex', justifyContent: 'center', position: 'relative' }}>\n                    <span style={{ position: 'absolute', top: '-0.8rem', left: '0', fontWeight: 600, opacity: 0.6 }}>Preview :</span>\n                    <Note note={{ title, desc, access, editable, username }} />\n                </div>\n                <Box\n                    component=\"form\"\n                    sx={{\n                        '& .MuiTextField-root': { mb: 1.3, width: '85%' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <TextField\n                        required\n                        id=\"title-textarea\"\n                        label=\"Title\"\n                        placeholder=\"Write max 20 characters\"\n                        value={title}\n                        onChange={event => setTitle(event.target.value)}\n                    />\n                    <TextField\n                        id=\"desc-textarea\"\n                        label=\"Description\"\n                        placeholder=\"Write max 200 characters\"\n                        multiline\n                        value={desc}\n                        onChange={event => setDesc(event.target.value)}\n                    />\n\n                    {(isAdmin || realUsername === username) &&\n                        <FormControl sx={{ width: '85%' }}>\n                            <InputLabel id=\"access-input-label\">Access</InputLabel>\n                            <Select\n                                labelId=\"access-input-label\"\n                                id=\"access-input\"\n                                label=\"Access\"\n                                value={access}\n                                onChange={event => setAccess(event.target.value)}\n                            >\n                                {isAdmin && <MenuItem value='global'>Global</MenuItem>}\n                                <MenuItem value='public'>Public</MenuItem>\n                                {(isAdmin || access === 'private' || realUsername === username) && !isGuest && <MenuItem value='private'>Private</MenuItem>}\n                            </Select>\n                        </FormControl>\n                    }\n\n                    {(access !== 'private') ?\n                        <div>\n                            <FormControlLabel\n                                label=\"Editable (By Anyone)\"\n                                control={<CustomSwitch checked={editable} onChange={event => setEditable(event.target.checked)} />}\n                                labelPlacement='start'\n                            />\n                            <span style={{ marginLeft: '0.9rem', fontWeight: 600, opacity: 0.6 }}>{editable ? \"Yes\" : \"No\"} </span>\n                        </div>\n                        :\n                        <div style={{ fontSize: '0.85rem', fontWeight: 600, opacity: 0.6, margin: '0.6rem 0 0.6rem 0' }}>\n                            Private Note can't be made Editable by everyone (as only you can view/edit)\n                        </div>\n                    }\n\n                    <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between' }}>\n                        <div style={{ fontWeight: 600, fontSize: '1.1rem', opacity: 0.7 }}>Enter Code : </div>\n                        <FormControl>\n                            <InputLabel id=\"changeLang-select-label\">Language</InputLabel>\n                            <Select\n                                labelId=\"changeLang-select-label\"\n                                id=\"changeLang-select\"\n                                value={language}\n                                label=\"Language\"\n                                style={{ width: '8em', height: '2.5em' }}\n                                onChange={e => setLanguage(e.target.value)}\n                            >\n                                <MenuItem value={'c'}>C</MenuItem>\n                                <MenuItem value={'cpp'}>Cpp</MenuItem>\n                                <MenuItem value={'py'}>Python</MenuItem>\n                                <MenuItem value={'java'}>JAVA</MenuItem>\n                                <MenuItem value={'js'}>JS</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <CodeEditorv3\n                        code={code}\n                        setCode={setCode}\n                        language={language}\n                        fontSize={13}\n                    />\n                </Box>\n\n            </DialogContent>\n            <DialogActions>\n                <Button style={{ textTransform: 'capitalize' }} variant='outlined' color='secondary' onClick={handleSave}>Save</Button>\n                <Button style={{ textTransform: 'capitalize' }} variant='outlined' onClick={handleClose}>Cancel</Button>\n            </DialogActions>\n        </Dialog >\n    );\n}\n\nconst CustomSwitch = styled(Switch)(({ theme }) => ({\n    padding: 8,\n    '& .MuiSwitch-track': {\n        borderRadius: 22 / 2,\n        '&:before, &:after': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            width: 16,\n            height: 16,\n        },\n        '&:before': {\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n                theme.palette.getContrastText(theme.palette.primary.main),\n            )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\n            left: 12,\n        },\n        '&:after': {\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n                theme.palette.getContrastText(theme.palette.primary.main),\n            )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\n            right: 12,\n        },\n    },\n    '& .MuiSwitch-thumb': {\n        boxShadow: 'none',\n        width: 16,\n        height: 16,\n        margin: 2,\n    },\n}));\n\nexport default EditNote;\n","// extracted by mini-css-extract-plugin\nexport default {\"head\":\"Notes_head__eGo9q\",\"noteList\":\"Notes_noteList__dhI38\",\"addNoteFab\":\"Notes_addNoteFab__eBgp4\",\"adminModeFab\":\"Notes_adminModeFab__i2f5r\",\"searchNoteFab\":\"Notes_searchNoteFab__fpjhK\",\"container\":\"Notes_container__1HbzT\",\"ncLabel\":\"Notes_ncLabel__ePH6I\",\"noNote\":\"Notes_noNote__gK9HN\",\"red\":\"Notes_red__qHkOb\"};","import React, { forwardRef, Fragment, useCallback, useEffect, useState, useTransition } from 'react'\nimport { useSearchParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@mui/system';\nimport { Fab, InputBase, Slide, Tooltip, Zoom, useMediaQuery } from '@mui/material';\nimport { Cancel, NoteAdd, Search, SupervisedUserCircle, KeyboardArrowRight } from '@mui/icons-material'\n\nimport AddNote from './AddNote/AddNote';\nimport ViewNote from './ViewNote/ViewNote';\nimport EditNote from './EditNote/EditNote';\nimport { SERVER_LINK } from '../../dev-server-link';\nimport { messageActions } from '../../store/Message/message-slice';\nimport LoadingSpinner from '../../compenents/LoadingSpinner/LoadingSpinner';\nimport Note from './Note/Note';\nimport classes from './Notes.module.css';\n// import useDebounce from '../../hooks/useDebounce';\n// import useTimeout from './../../hooks/useTimeout';\n\n/*\n    Schema : _id, title, desc, codeid, username, access, editable, language\n    \n    title: Max 18 characters\n\n    codeid: It represent database _id for codes (if any)\n\n    language: c, cpp, js, java, python\n\n    access : global, public, private\n        global : It is submitted by admin and \n                 is shown on top and can/can't (depends on editable) be modified by anyone else than admin, \n                 and can be viewed by anyone.\n        public : It is submitted by any user/guest and\n                 is editable by anyone/none(depends on user to allow edit or not)\n                 and can be viewed by anyone.\n        private: It is submitted by loggedIn user and\n                 can only read/edited by that perticular user only.\n\n    editable: true/false\n        It represents if a public/global note is editable by any user/guest.\n        It won't matter if note is private (hence, there is no field like editable in private note).\n\n    *   Notes are only deletable by user that created the note and \n        if note is created by guest then anyone one can delete it\n        and admin can delete any note.\n*/\n\nconst SlideTransition = forwardRef((props, ref) => (\n    <Slide ref={ref} {...props} direction=\"up\" />\n));\n\nlet isFirstRender = true;\n\nconst Notes = () => {\n\n    const [allNotes, setAllNotes] = useState([]);\n    const [originalAllNotes, setOriginalAllNotes] = useState([]);\n\n    const [openAddModal, setOpenAddModal] = useState(false);\n\n    const [openViewModal, setOpenViewModal] = useState(false);\n    const [viewNote, setViewNote] = useState({});\n\n    const [openEditModal, setOpenEditModal] = useState(false);\n    const [editNote, setEditNote] = useState({});\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(undefined);\n    const [reloadNeeded, setReloadNeeded] = useState(false);\n    const [searchNoteQuery, setSearchNoteQuery] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [isAdminMode, setAdminMode] = useState(false);\n\n    const dispatch = useDispatch();\n    const { loggedIn, username, isAdmin } = useSelector(state => state.auth);\n    const isMobile = useMediaQuery('(max-width:620px)');\n\n    useEffect(() => {\n        if (!isFirstRender || loading) return;\n        isFirstRender = false;\n        const querynoteid = searchParams.get(\"view\");\n        if (!querynoteid) return;\n        const foundNote = originalAllNotes.find(ele => ele._id === querynoteid);\n        if (!foundNote) {\n            dispatch(messageActions.set({\n                type: 'error',\n                message: \"The Note's Link you are accessing does not exists\",\n                description: 'There is a query string in url, which does not belong to any note, this may be due to : the note you are tying to access has been deleted or may be link in incomplete !'\n            }));\n            return;\n        }\n\n        setOpenViewModal(true);\n        setViewNote(foundNote);\n    }, [loading, searchParams, originalAllNotes, dispatch]);\n\n    useEffect(() => {\n        if (isFirstRender) return;\n        if (openViewModal) setSearchParams({ \"view\": viewNote._id });\n        else setSearchParams({});\n    }, [openViewModal, setSearchParams, viewNote]);\n\n\n    const markEditOrDelete = (_id, property) => {\n        setAllNotes(prev => {\n            const newNotes = prev.map(ele => {\n                if (ele._id === _id) {\n                    const newEle = { ...ele };\n                    newEle[property] = true;\n                    return newEle;\n                }\n                else return ele;\n            });\n            return newNotes;\n        });\n    }\n\n    /*\n    Make a request to server, with credentials and it will return an array \n    containing all global and public notes but also with private notes specific\n    to that credentials.\n    */\n    const fetchNotesFromServer = useCallback(() => {\n        setLoading(true);\n        fetch(\n            `${SERVER_LINK}/api/notes/allNotes${(isAdminMode) ? '?admin=true' : ''}`,\n            {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'GET',\n                credentials: 'include'\n            }\n        )\n            .then(async response => {\n                const res = await response.json();\n                if (response.ok) return res\n                return Promise.reject(res);\n            })\n            .then(response => { setAllNotes(response); setOriginalAllNotes(response); })\n            .catch(setError)\n            .finally(() => setLoading(false))\n    }, [isAdminMode]);\n\n    useEffect(() => {\n        fetchNotesFromServer();\n    }, [dispatch, fetchNotesFromServer]);\n\n    useEffect(() => {\n        dispatch(messageActions.set({\n            type: 'info',\n            message: 'Click on Notes to view their Code !',\n            description: 'If you click on a Note, you will be able to share, edit, or delete it. Alternatively, you can add a new note by clicking on the Add button !'\n        }));\n    }, [dispatch]);\n\n    const addNoteHandler = () => setOpenAddModal(true);\n\n    // const [isSearching] = useSearchNotes_Debounce({ searchNoteQuery, setAllNotes, originalAllNotes });\n    const [isSearching] = useSearchNotes_Transition({ searchNoteQuery, setAllNotes, originalAllNotes });\n\n    const refreshNotesList = () => {\n        setEditNote({});\n        setViewNote({});\n        setReloadNeeded(false);\n        fetchNotesFromServer();\n    }\n\n    return (\n        <Fragment>\n            {/* show loading while notes are being fetched ! */}\n            {loading && <LoadingSpinner />}\n            {!loading && error && (\n                <div>\n                    <div className='errorTemplate'>\n                        <div><span>Msg : </span>Wasn't able to connect to server check if your are not offline or server might not be working !</div>\n                        {error && <div><span>Error : </span>{JSON.stringify(error)}</div>}\n                    </div>\n                </div>\n            )}\n            {!error && (\n                <div className={classes.container}>\n                    <AddNote setSearchParams={setSearchParams} SlideTransition={SlideTransition} setReloadNeeded={setReloadNeeded} isMobile={isMobile} openModal={openAddModal} setOpenModal={setOpenAddModal} />\n                    <ViewNote setSearchParams={setSearchParams} SlideTransition={SlideTransition} setReloadNeeded={setReloadNeeded} markEditOrDelete={markEditOrDelete} isMobile={isMobile} openModal={openViewModal} setOpenModal={setOpenViewModal} setEditNote={setEditNote} setOpenEditModal={setOpenEditModal} viewNote={viewNote} />\n                    <EditNote setSearchParams={setSearchParams} SlideTransition={SlideTransition} setReloadNeeded={setReloadNeeded} markEditOrDelete={markEditOrDelete} isMobile={isMobile} openModal={openEditModal} setOpenModal={setOpenEditModal} editNote={editNote} />\n\n                    <Tools\n                        addNoteHandler={addNoteHandler}\n                        isAdmin={isAdmin}\n                        isAdminMode={isAdminMode}\n                        setAdminMode={setAdminMode}\n                    />\n\n                    <Heading\n                        refreshNotesList={refreshNotesList}\n                        reloadNeeded={reloadNeeded}\n                    />\n\n                    <SearchComponent\n                        searchNoteQuery={searchNoteQuery}\n                        setSearchNoteQuery={setSearchNoteQuery}\n                        isSearching={isSearching}\n                    />\n\n                    {!loading && (\n                        <NotesSection\n                            allNotes={allNotes}\n                            refreshNotesList={refreshNotesList}\n                            setViewNote={setViewNote}\n                            setOpenViewModal={setOpenViewModal}\n                            loggedIn={loggedIn}\n                            username={username}\n                            addNoteHandler={addNoteHandler}\n                        />\n                    )}\n\n                </div>\n            )}\n        </Fragment >\n    )\n};\n\nconst useSearchNotes_Transition = ({ searchNoteQuery, setAllNotes, originalAllNotes }) => {\n    const [isSearching, startTransition] = useTransition();\n    useEffect(() => {\n        startTransition(() => {\n            if (!searchNoteQuery) setAllNotes(originalAllNotes);\n            else setAllNotes(originalAllNotes.filter(note => (\n                note.title.toLowerCase().includes(searchNoteQuery.toLowerCase()) ||\n                note.desc.toLowerCase().includes(searchNoteQuery.toLowerCase())\n            )));\n        });\n    }, [searchNoteQuery, originalAllNotes, setAllNotes]);\n    return [isSearching];\n}\n\n// const useSearchNotes_Debounce = ({ searchNoteQuery, setAllNotes, originalAllNotes }) => {\n//     const [isSearching, setIsSearching] = useState(false);\n//     const { reset, clear } = useTimeout(() => {\n\n//         if (!searchNoteQuery) setAllNotes(originalAllNotes);\n//         else setAllNotes(originalAllNotes.filter(note => (\n//             note.title.toLowerCase().includes(searchNoteQuery.toLowerCase()) ||\n//             note.desc.toLowerCase().includes(searchNoteQuery.toLowerCase())\n//         )));\n\n//         setIsSearching(false);\n//     }, 500);\n//     useEffect(() => {\n//         setIsSearching(true);\n//         reset();\n//     }, [searchNoteQuery, reset]);\n//     useEffect(() => {\n//         setIsSearching(false);\n//         clear();\n//     }, [clear]);\n//     return [isSearching];\n// }\n\nconst Tools = ({ addNoteHandler, isAdmin, isAdminMode, setAdminMode }) => {\n    const adminModeHandler = () => isAdmin ? setAdminMode(prev => !prev) : setAdminMode(false);\n    return (\n        <Fragment>\n            <Tooltip TransitionComponent={Zoom} title='Add Note' placement='bottom'>\n                <Fab onClick={addNoteHandler} className={classes.addNoteFab} aria-label='add-note'>\n                    <NoteAdd sx={{ fontSize: '1.7rem' }} />\n                </Fab>\n            </Tooltip>\n\n            {isAdmin &&\n                <Tooltip TransitionComponent={Zoom} title='Admin Mode' placement='bottom'>\n                    <Fab color='secondary' onClick={adminModeHandler} className={classes.adminModeFab} aria-label='admin-mode'>\n                        {isAdminMode ?\n                            <Cancel sx={{ fontSize: '2.4rem' }} /> :\n                            <SupervisedUserCircle sx={{ fontSize: '2.4rem' }} />\n                        }\n                    </Fab>\n                </Tooltip>\n            }\n        </Fragment>\n    );\n};\n\nconst Heading = ({ reloadNeeded, refreshNotesList }) => (\n    <Fragment>\n        <div className={classes.head}>Notes</div>\n        {reloadNeeded &&\n            <div style={{\n                fontSize: '1rem', color: 'hsla(0, 40%, 50%,0.8)',\n                margin: 'unset', position: 'relative', marginBottom: '0.5rem'\n            }}><span onClick={refreshNotesList} style={{\n                zIndex: 100, position: 'relative',\n                color: 'blue', textDecoration: 'underline',\n                fontWeight: 500, cursor: 'pointer'\n            }}>Refresh</span> this page to see changes !</div>\n        }\n    </Fragment>\n);\n\nconst SearchComponent = ({ searchNoteQuery, setSearchNoteQuery, isSearching }) => {\n    return (\n        <Box sx={{\n            position: 'relative',\n            borderRadius: '5px',\n            backgroundColor: 'rgba(0,0,0,0.16)',\n            transition: 'all 300ms ease-in-out',\n            '&:hover': {\n                backgroundColor: 'rgba(0,0,0,0.13)',\n            },\n            width: '75%',\n            display: 'flex',\n            marginBottom: '1rem',\n            marginTop: '0.5rem'\n        }}>\n            <Box sx={{\n                padding: '0 1rem',\n                height: '100%',\n                position: 'absolute',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n            }}>\n                <Search />\n            </Box>\n            <InputBase sx={{\n                color: 'inherit',\n                width: '100%',\n                '& .MuiInputBase-input': {\n                    padding: '0.7rem',\n                    paddingLeft: '3.5rem',\n                    width: '100%'\n                },\n            }}\n                placeholder=\"Search a note…\"\n                inputProps={{ 'aria-label': 'search a note' }}\n                onChange={event => setSearchNoteQuery(event.target.value)}\n                value={searchNoteQuery}\n            />\n            {isSearching && <span style={{ display: 'flex', alignItems: 'center', marginRight: '5px' }} className='spin' color='black' />}\n        </Box>\n    );\n}\n\nconst NotesSection = ({ allNotes, refreshNotesList, setViewNote, setOpenViewModal, loggedIn, username, addNoteHandler }) => {\n    return (\n        <Fragment>\n            <div className={classes.ncLabel}><span>Global Notes by Admin</span><KeyboardArrowRight fontSize='medium' /></div>\n            <div className={classes.noteList}>\n                {allNotes.filter(note => (note.access === 'global')).map(note =>\n                    <Note refreshNotesList={refreshNotesList} key={note._id} note={note} setViewNote={setViewNote} setOpenViewModal={setOpenViewModal} />\n                )}\n            </div>\n\n            <div className={classes.ncLabel}><span>Public Notes by Users/Guest</span></div>\n            <div className={classes.noteList}>\n                {allNotes.filter(note => (note.access === 'public')).map(note =>\n                    <Note refreshNotesList={refreshNotesList} key={note._id} note={note} setViewNote={setViewNote} setOpenViewModal={setOpenViewModal} />\n                )}\n            </div>\n\n            <div className={classes.ncLabel}>\n                {loggedIn ?\n                    <span>Private Notes by {username}</span> :\n                    <span className={classes.red}>To see Private Notes you must be Logged In !</span>\n                }\n            </div>\n            {loggedIn ?\n                <div className={classes.noteList}>\n                    {allNotes.filter(note => (note.access === 'private')).length === 0 ?\n                        <span className={classes.red + ' ' + classes.noNote}>You have not created any Private Note, <button onClick={addNoteHandler}>Make One</button></span> :\n                        allNotes.filter(note => (note.access === 'private')).map(note =>\n                            <Note refreshNotesList={refreshNotesList} key={note._id} note={note} setViewNote={setViewNote} setOpenViewModal={setOpenViewModal} />\n                        )}\n                </div>\n                : \"\"\n            }\n        </Fragment>\n    );\n}\n\nexport default Notes;","import React, { Fragment } from 'react'\n\nimport AceEditor from 'react-ace'\n\nimport \"ace-builds/webpack-resolver\"\n\nimport 'ace-builds/src-noconflict/mode-javascript'\nimport 'ace-builds/src-noconflict/mode-c_cpp'\nimport 'ace-builds/src-noconflict/mode-java'\nimport 'ace-builds/src-noconflict/mode-python'\n\nimport 'ace-builds/src-noconflict/theme-monokai'\nimport 'ace-builds/src-noconflict/ext-language_tools'\n\nconst CodeEditorv3 = props => {\n\n    const { code, setCode, language, fontSize, isReadOnly = false, isLoading = false } = props;\n\n    let mode = 'c_cpp';\n    switch (language) {\n        case 'c':\n            mode = 'c_cpp';\n            break;\n        case 'cpp':\n            mode = 'c_cpp';\n            break;\n        case 'java':\n            mode = 'java';\n            break;\n        case 'py':\n            mode = 'python';\n            break;\n        case 'js':\n            mode = 'javascript';\n            break;\n        default:\n            mode = 'c_cpp';\n    }\n\n    return (\n        <Fragment>\n            {isLoading && <div style={{ position: 'absolute', zIndex: 10, display: 'flex', alignItems: 'center', pointerEvents: 'none', translate: '0 1rem' }}>\n                <div className='spin' />\n                <span style={{ fontSize: '1.8rem', color: 'rgba(128, 128, 128, 0.8)', fontWeight: 500, marginLeft: '1rem' }}>Loading Code...</span>\n            </div>}\n            <AceEditor\n                placeholder=\"Enter your code here\"\n                mode={mode}\n                theme=\"monokai\"\n                name=\"editorv3\"\n                onLoad={() => {\n                    // console.log('loaded')\n                }}\n                onChange={value => setCode(value)}\n                fontSize={parseInt(fontSize)}\n                showPrintMargin={false}\n                showGutter={true}\n                readOnly={isReadOnly}\n                highlightActiveLine={true}\n                value={code}\n                width='100%'\n                setOptions={{\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    enableSnippets: false,\n                    showLineNumbers: true,\n                    tabSize: 4,\n                }}\n            />\n        </Fragment>\n    )\n}\n\nexport default CodeEditorv3;"],"names":["_ref","note","setOpenViewModal","setViewNote","refreshNotesList","title","codeid","desc","username","access","editable","edited","deleted","_jsxs","className","classes","style","cursor","onClick","noteClickHandler","children","Fragment","_jsx","fontSize","fontWeight","color","margin","lineHeight","zIndex","position","textDecoration","marginRight","CustomSwitch","styled","Switch","_ref2","theme","padding","borderRadius","content","top","transform","width","height","backgroundImage","encodeURIComponent","palette","getContrastText","primary","main","left","right","boxShadow","openModal","setOpenModal","isMobile","setReloadNeeded","SlideTransition","isAdmin","isGuest","useSelector","state","auth","setTitle","useState","setDesc","setAccess","setEditable","code","setCode","language","setLanguage","dispatch","useDispatch","handleClose","descriptionElementRef","useRef","useEffect","current","descriptionElement","focus","Dialog","open","onClose","scroll","fullWidth","maxWidth","fullScreen","TransitionComponent","DialogTitle","textTransform","DialogContent","dividers","ref","display","justifyContent","opacity","Note","Box","component","sx","mb","noValidate","autoComplete","TextField","required","id","label","placeholder","value","onChange","event","target","multiline","FormControl","InputLabel","Select","labelId","MenuItem","FormControlLabel","control","checked","labelPlacement","marginLeft","alignItems","e","CodeEditorv3","DialogActions","Button","variant","handleAdd","messageActions","set","type","message","fetch","SERVER_LINK","headers","method","body","JSON","stringify","credentials","then","async","res","response","json","ok","Promise","reject","description","catch","err","console","error","ConfirmationDialog","setOpen","handleDeleteOperation","Fade","DialogContentText","autoFocus","useFetchCodeForNote","noteid","setLoading","finally","viewNote","setEditNote","setOpenEditModal","markEditOrDelete","_id","lastModifiedAt","auth_username","openDeleteModal","setOpenDeleteModal","copied","setCopied","setTimeout","loading","codeSubmittingState","setCodeSubmittingState","setResponse","status","input","setInput","endRef","intervalID","stopInterval","useCallback","clearInterval","isEditable","isDeleteable","handleDelete","Tooltip","Zoom","placement","Fab","handleShare","link","window","location","href","copy","size","Share","handleEdit","ml","disabled","Edit","Delete","IconButton","copyHandler","result","Check","ContentCopy","isReadOnly","isLoading","maxRows","marginTop","msg","stdout","stderr","serverError","toString","LoadingSpinner","moment","fromNow","preventDefault","scrollIntoView","behavior","query","queryData","setInterval","queryId","data","output","editNote","title_","desc_","access_","editable_","code_","language_","realUsername","handleSave","forwardRef","props","Slide","direction","isFirstRender","useSearchNotes_Transition","searchNoteQuery","setAllNotes","originalAllNotes","isSearching","startTransition","useTransition","filter","toLowerCase","includes","Tools","addNoteHandler","isAdminMode","setAdminMode","NoteAdd","adminModeHandler","prev","Cancel","SupervisedUserCircle","Heading","_ref3","reloadNeeded","marginBottom","SearchComponent","_ref4","setSearchNoteQuery","backgroundColor","transition","Search","InputBase","paddingLeft","inputProps","NotesSection","_ref5","allNotes","loggedIn","KeyboardArrowRight","map","length","Notes","setOriginalAllNotes","openAddModal","setOpenAddModal","openViewModal","openEditModal","setError","undefined","searchParams","setSearchParams","useSearchParams","useMediaQuery","querynoteid","get","foundNote","find","ele","property","newEle","fetchNotesFromServer","AddNote","ViewNote","EditNote","mode","pointerEvents","translate","AceEditor","name","onLoad","parseInt","showPrintMargin","showGutter","readOnly","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize"],"sourceRoot":""}