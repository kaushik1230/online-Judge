{"version":3,"file":"static/js/415.09cb1faf.chunk.js","mappings":"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","sources":["pages/ServerLogs/ServerLogs.js"],"sourcesContent":["import React, { useState, useEffect, Fragment, useRef } from 'react'\nimport { useSelector } from 'react-redux';\nimport { Button, Fab, Paper, Box } from '@mui/material';\nimport { KeyboardArrowDown, KeyboardDoubleArrowLeft, KeyboardDoubleArrowRight, Visibility } from '@mui/icons-material';\nimport { v4 } from 'uuid';\nimport io from 'socket.io-client';\nimport { SERVER_LINK } from '../../dev-server-link';\nimport './ServerLogs.css';\nimport LoadingSpinner from './../../compenents/LoadingSpinner/LoadingSpinner';\n\nconst ServerLogs = () => {\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(undefined);\n    const [stdout, setStdout] = useState({});\n    const [stderr, setStderr] = useState({});\n    const [isOut, setIsOut] = useState(true);\n    const endRef = useRef(null);\n    const [pageNo, setPageNo] = useState(1);\n\n    useFetchServerLogs(setLoading, setError, setStderr, setStdout, pageNo);\n    useServerLogsSocket(setStdout, setStderr);\n    useColorTokens([isOut, stderr, stdout]);\n\n    return (\n        <Fragment>\n            <Tools\n                endRef={endRef} isOut={isOut} pageNo={pageNo}\n                setIsOut={setIsOut} setPageNo={setPageNo}\n            />\n            {loading && <LoadingSpinner />}\n            {!loading && error && <div className='errorTemplate' style={{ width: '70vw' }}>\n                <div><span>Msg : </span>{error.msg}</div>\n                {error && <div><span>Error : </span>{JSON.stringify(error.error)}</div>}\n            </div>}\n            {!loading && !error && (\n                <Fragment>\n                    <pre id='out-pre' style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'flex-start',\n                        margin: '6rem 1rem',\n                        fontSize: '0.6rem'\n                    }}>\n                        {isOut ?\n                            [...stdout].reverse().map(txt => (\n                                <div key={txt.id}>{txt.msg}</div>\n                            )) :\n                            stderr.map(txt => (\n                                <div key={txt.id}>{txt.msg}</div>\n                            ))\n                        }\n                    </pre>\n                    <div ref={endRef} aria-hidden />\n                </Fragment>\n            )}\n        </Fragment>\n    );\n}\n\n\nconst useServerLogsSocket = (setStdout, setStderr) => {\n    const loginState = useSelector(state => state.auth);\n    useEffect(() => {\n        if (!loginState.isAdmin) return;\n        const newSocket = io(SERVER_LINK, { query: { id: v4() } });\n        newSocket.on('logger-new-log', msg => {\n            setStdout(prev => [...prev, { msg, id: v4() }])\n        });\n        newSocket.on('logger-new-error', msg => {\n            setStderr(prev => [...prev, { msg, id: v4() }])\n        });\n        return () => newSocket.close();\n    }, [loginState.username, loginState.isAdmin, setStdout, setStderr]);\n}\n\nconst useFetchServerLogs = (setLoading, setError, setStderr, setStdout, pageNo) => {\n    useEffect(() => {\n        setLoading(true);\n        setError(undefined);\n        fetch(\n            `${SERVER_LINK}/api/experimental/logs?pageNo=${pageNo}`,\n            {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'GET',\n                credentials: 'include'\n            }\n        )\n            .then(async response => {\n                if (response.ok) return response.json();\n                const json = await response.json();\n                return await Promise.reject(json);\n            })\n            .then(res => {\n                setStdout(res.stdoutTxt.trim().split('\\n').map(txt => ({ msg: txt, id: v4() })));\n                setStderr(res.stderrTxt.trim().split('\\n').map(txt => ({ msg: txt, id: v4() })));\n            })\n            .catch(setError)\n            .finally(() => setLoading(false))\n    }, [setLoading, setError, setStderr, setStdout, pageNo]);\n}\n\nconst useColorTokens = dependency => {\n    useEffect(() => {\n        // setting timeout so that this process don't block rendering\n        const timeoutId = setTimeout(() => {\n            const outPre = document.getElementById('out-pre');\n            if (!outPre) return;\n            // tokens: [searchKey, className, regexFlags]\n            [...outPre.childNodes].every(child => {\n                if (child.getAttribute(\"tokenized\") === \"ok\") return false;\n                child.innerHTML = tokenize(child.innerHTML);\n                child.setAttribute(\"tokenized\", \"ok\");\n                return true;\n            });\n        }, 10);\n        return () => clearTimeout(timeoutId);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, dependency);\n}\n\n// searchKey, className, regexFlags\nconst tokens = [\n    ['GET', 'get', 'g'],\n    ['POST', 'post', 'g'],\n    ['PUT', 'put', 'g'],\n    ['DELETE', 'delete', 'g'],\n    ['Unlinked', 'unlinked', 'g'],\n    ['PORT', 'port', 'g'],\n    ['Database', 'database', 'g'],\n    ['Production', 'production', 'g'],\n    ['Note:', 'note', 'g'],\n    ['Add Note', 'addnote', 'g'],\n    ['Edit Note', 'editnote', 'g'],\n    ['Delete Note', 'deletenote', 'g'],\n    ['Containers', 'containers', 'g'],\n    ['Deleted', 'deleted', 'g'],\n    ['Error', 'error', 'g'],\n    ['failed', 'failed', 'g'],\n    ['LOG', 'log', 'g'],\n];\n\nconst tokenize = text => {\n    tokens.forEach(tokenDetail => (\n        text = text.replace(new RegExp(tokenDetail[0], tokenDetail[2]), `<span class='token token-${tokenDetail[1]}'>${tokenDetail[0]}</span>`)\n    ));\n    const timeVar = text.match('[0-9]+/[0-9]+/[0-9]+, [0-9]+:[0-9]+:[0-9]+ [a-zA-Z][a-zA-Z]');\n    timeVar && (text = text.replace(timeVar[0], `<span class='token-time'>${timeVar[0]}</span>`));\n    return text;\n}\n\nconst Tools = ({ setIsOut, isOut, endRef, setPageNo, pageNo }) => {\n    return (\n        <Fragment>\n            <Button\n                variant='contained'\n                color='success'\n                onClick={() => setIsOut(prev => !prev)}\n                sx={{ position: 'fixed', top: '5em', right: '1em', textTransform: 'capitalize', opacity: '0.9' }}\n                startIcon={<Visibility />}\n            >\n                {isOut ? 'show stderr' : 'show stdout'}\n            </Button>\n            <Box sx={{ position: 'fixed', display: 'flex', top: '8em', right: '1em', opacity: '0.9' }} >\n                <Fab onClick={() => setPageNo(prev => (prev === 1 ? 1 : prev - 1))} size=\"small\" color=\"primary\" aria-label=\"add\">\n                    <KeyboardDoubleArrowLeft />\n                </Fab>\n                <Paper elevation={3} sx={{ width: '35px', height: '35px', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '1.2em', margin: '0 0.2em' }} >{pageNo}</Paper>\n                <Fab onClick={() => setPageNo(prev => prev + 1)} size=\"small\" color=\"primary\" aria-label=\"add\">\n                    <KeyboardDoubleArrowRight />\n                </Fab>\n            </Box>\n            <Fab onClick={() => {\n                endRef.current && endRef.current.scrollIntoView();\n            }} style={{\n                position: 'fixed', bottom: '4.5em', right: '1em', opacity: '0.9'\n            }} size=\"small\" color=\"primary\" aria-label=\"add\">\n                <KeyboardArrowDown />\n            </Fab>\n        </Fragment>\n    );\n}\n\nexport default ServerLogs;\n"],"names":["useServerLogsSocket","setStdout","setStderr","loginState","useSelector","state","auth","useEffect","isAdmin","newSocket","io","SERVER_LINK","query","id","v4","on","msg","prev","close","username","useFetchServerLogs","setLoading","setError","pageNo","undefined","fetch","headers","method","credentials","then","async","response","ok","json","Promise","reject","res","stdoutTxt","trim","split","map","txt","stderrTxt","catch","finally","useColorTokens","dependency","timeoutId","setTimeout","outPre","document","getElementById","childNodes","every","child","getAttribute","innerHTML","tokenize","setAttribute","clearTimeout","tokens","text","forEach","tokenDetail","replace","RegExp","timeVar","match","Tools","_ref","setIsOut","isOut","endRef","setPageNo","_jsxs","Fragment","children","_jsx","Button","variant","color","onClick","sx","position","top","right","textTransform","opacity","startIcon","Visibility","Box","display","Fab","size","KeyboardDoubleArrowLeft","Paper","elevation","width","height","alignItems","justifyContent","fontSize","margin","KeyboardDoubleArrowRight","current","scrollIntoView","style","bottom","KeyboardArrowDown","ServerLogs","loading","useState","error","stdout","stderr","useRef","LoadingSpinner","className","JSON","stringify","flexDirection","reverse","ref"],"sourceRoot":""}